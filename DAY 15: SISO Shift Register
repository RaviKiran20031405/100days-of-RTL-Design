module siso_register (
    input wire clk,
    input wire reset,
    input wire serial_in,
    output wire serial_out
);
    reg [3:0] shift_reg;  // 4-bit shift register

    // Sequential block
    always @(posedge clk or posedge reset) begin
        if (reset) begin
            shift_reg <= 4'b0000;  // Reset the shift register to 0
        end else begin
            shift_reg <= {shift_reg[2:0], serial_in};  // Shift left and input new bit
        end
    end

    assign serial_out = shift_reg[3];  // Output the MSB (most significant bit)
endmodule
