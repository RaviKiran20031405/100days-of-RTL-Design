
module Factorial (in, factorial_out);

parameter N = 5;

input [N:0] in;
output [N*8:0] factorial_out;
reg [N*8:0] temp; // count the value until it decrease to 1 
reg [N*8:0] fact;

always@(in)
begin

if(in == 1'b1)
begin
fact = 1'b1;
end

else
begin
fact = in;
for( temp = in-1 ; temp != 1; temp = temp-1 )
fact = fact*temp;
end

end

assign factorial_out = fact;

endmodule


///////////////////////////////   TB    ////////////////////////////////


module Factorial_tb(); 

parameter N = 5;

reg [N:0] in;
wire [N*8:0] factorial_out;

Factorial dut( .in(in), .factorial_out(factorial_out) );

initial
begin
$monitor (" in = %d, factorial_out = %d ", in, factorial_out );
end

initial
begin
 in = 2;
 #10;
 in = 10;
 #10;
 in = 13;
 #10;
 in = 9;
 #10;
 in = 4;
 #10;
 in = 8;
 #10;
 in = 3;
 #10;
 in = 15;
 #10;
end
initial #100 $finish;

endmodule
